name: Code Quality

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  code-quality:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 black mypy isort bandit
        pip install -r requirements.txt
        
    - name: Check import sorting with isort
      run: |
        isort --check-only --diff .
        
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
        
    - name: Check code formatting with black
      run: |
        black --check --diff .
        
    - name: Type check with mypy
      run: |
        mypy azchess/ --ignore-missing-imports --no-strict-optional
        
    - name: Validate configuration files
      run: |
        python -c "from azchess.config import Config; Config.load('config.yaml'); print('‚úÖ Config validation passed')"
        
    - name: Check package structure
      run: |
        python -c "import azchess; print('‚úÖ Package imports successful')"
        
    - name: Security scan with bandit
      run: |
        echo "üîí Running bandit security scan..."
        bandit -r azchess/ -f txt --severity-level medium
        echo "‚úÖ Bandit security scan completed"

    - name: Check for common security issues
      run: |
        # Basic security checks
        if grep -r "password.*=" . --include="*.py" --include="*.yml" --include="*.yaml"; then
          echo "‚ö†Ô∏è  Potential hardcoded passwords found"
          exit 1
        fi
        if grep -r "api_key.*=" . --include="*.py" --include="*.yml" --include="*.yaml"; then
          echo "‚ö†Ô∏è  Potential hardcoded API keys found"
          exit 1
        fi
        echo "‚úÖ No obvious security issues found"
